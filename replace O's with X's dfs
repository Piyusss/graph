// User function Template for C++

class Solution{
    private:
    void dfs(int i,int j,vector<vector<int>>&vis , int n,int m,int dr[],int dc[],vector<vector<char>>mat){
        vis[i][j]=1;
        for(int k=0 ; k<4 ; k++){
            int nr=i+dr[k];
            int nc=j+dc[k];
            if(nr>=0 && nr<n && nc>=0 && nc<m && !vis[nr][nc] && mat[nr][nc]=='O'){
                dfs(nr,nc,vis,n,m,dr,dc,mat);
            }
        }
    }
public:
    vector<vector<char>> fill(int n, int m, vector<vector<char>> mat){
        // code here
        int dr[4]={1,-1,0,0};
        int dc[4]={0,0,1,-1};
        vector<vector<int>>vis(n,vector<int>(m,0));
        vector<vector<char>>ans(n,vector<char>(m,0));
        for(int j=0 ; j<m ; j++){
            int i=0;
            if(!vis[i][j] && mat[i][j]=='O'){
                dfs(i,j,vis,n,m,dr,dc,mat);
            }
        }
        
        for(int j=0 ; j<m ; j++){
            int i=n-1;
            if(!vis[i][j] && mat[i][j]=='O'){
                dfs(i,j,vis,n,m,dr,dc,mat);
            }
        }
        
        for(int i=0 ; i<n ; i++){
            int j=0;
            if(!vis[i][j] && mat[i][j]=='O'){
                dfs(i,j,vis,n,m,dr,dc,mat);
            }
        }
        
        for(int i=0 ; i<n ; i++){
            int j=m-1;
            if(!vis[i][j] && mat[i][j]=='O'){
                dfs(i,j,vis,n,m,dr,dc,mat);
            }
        }
        
        for(int i=0 ; i<n ; i++){
            for(int j=0 ; j<m ; j++){
                if(vis[i][j]==1){
                    ans[i][j]='O';
                }
                else{
                    ans[i][j]='X';
                }
            }
        }
        return ans;
    }
};
