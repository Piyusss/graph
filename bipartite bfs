class Solution {
    private:
    bool bfs(int start, vector<int>adj[] ,int vis[]){
        vis[start]=0;
        queue<int>q;
        q.push(start);
        while(!q.empty()){
            int node=q.front();
            q.pop();
            for(auto it:adj[node]){
                if(vis[it]==-1){
                    vis[it]=!vis[node];
                    q.push(it);
                }
                else if(vis[it]==vis[node]){
                    return false;
                }
            }
        }
        return true;
    }
public:
	bool isBipartite(int V, vector<int>adj[]){
	    // Code here
	    int vis[V];
	    for(int i=0 ; i<V ; i++)vis[i]=-1;
	    for(int i=0 ; i<V ; i++){
	        if(vis[i]==-1){
	            if(bfs(i,adj,vis)==false)return false;
	        }
	    }
	    return true;
	}

};
